1)Текстовый файл состоит из символов A, B и C.
Определите максимальное количество идущих подряд пар символов AB или CB в прилагаемом файле.
Искомая подпоследовательность должна состоять только из пар AB, 
или только из пар CB, или только из пар AB и CB в произвольном порядке следования этих пар
f = open('24.txt')
n = f.read()
n = n.replace('AB', 'x')
n = n.replace('CB', 'x')
k = 0
m = 0
for i in range(len(n)):
    if n[i] == 'x':
        k += 1
        m = max(m, k)
    else:
        k = 0
print(m)

2)Текстовый файл состоит из символов A, B и C.
Определите максимальное количество идущих подряд пар символов AB или CB в прилагаемом файле.
Искомая подпоследовательность должна состоять только из пар AB, или только из пар CB, 
или только из пар AB и CB в произвольном порядке следования этих пар.
f = open("qqq")
s = f.readline() 
s = s.replace("AB", "x")
s = s.replace("CB", "x")
l = len(s)
n = 0
nmax = 0
for i in range(l):
    if s[i] == "x":
        n += 1
        nmax = max(nmax, n)
    else:
        n = 0
print(nmax)

3)Текстовый файл состоит не более, чем из 10^7 строчных букв английского алфавита. 
Найдите максимальную длину подстроки, в которой символы «a» и «d» не стоят рядом.
with open("qqq") as f:
    s = f.readline()
    s = s.replace('ad', 'a d')    
    s = s.replace('da', 'd a')
    l = list(map(len, s.split()))
    print(max(l))

4)Текстовый файл состоит не более чем из 10^6 символов L, D и R.
Определите максимальное количество идущих подряд символов, 
среди которых каждые два соседних различны.

f = open("qqq")
s = f.readline()
l = len(s)
nwr = 1
nmax = 1
for i in range(1, l):
    if s[i] != s[i-1]:
        nwr += 1
        nmax = max(nmax, nwr)
    else: 
        nwr = 1
print(nmax)

